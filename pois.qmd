---
title: "POIs and Grids"
eval: false
code-fold: false
engine: knitr
---

## Points of Interest

### OpenStreetMap

From [OSM](https://www.openstreetmap.org/) we can export several different **opportunities** to use on routing and accessibility exercises.

For instance, the **15-min city** idea follows the [Flowers of Proximity](https://www.flowersofproximity.com/), to categorize the opportinities in 7 different categories, based on @flowers2022.

[![The Flowers of Proximity](https://www.flowersofproximity.com/flower_of_proximity_large.svg){fig-align="center" width="400"}](https://www.flowersofproximity.com)

For the [Streets4All](https://streets4all.tecnico.ulisboa.pt/) project, and [SiteSelection](https://u-shift.github.io/SiteSelection/) package [@siteselection2024], we divided in:

-   Amenities
-   Healthcare
-   Leisure
-   Shop
-   Sport
-   Tourism

::: {.callout-note appearance="simple"}
### Script

See the script we did for [all Portugal](https://github.com/U-Shift/SiteSelection/releases/download/0.1/osm_poi_landuse.gpkg), and the dataset for [Lisbon](https://github.com/U-Shift/SiteSelection/releases/download/0.1/osm_poi_lisbon.geojson) (2024): [data_extract.R (line 146)](https://github.com/U-Shift/SiteSelection/blob/cced36b055495dc9db6c0c815b410e8f4f5c16ba/code/data_extract.R#L146)
:::

You can explore other OpenStreetMap categories at [their Wiki](https://wiki.openstreetmap.org/wiki/Map_features).

## Grids

You may want to use the original census units, or create a squared oh hexagonal grid.

1.  Create a grid
2.  Match all the Census and POIs to that grid

### Create a grid

We will use the city of Lisbon as example

```{r}
library(sf)
library(tidyverse)
library(mapview)

city_limit = st_read("data/Lisbon/Lisboa_lim.gpkg")
plot(city_limit)
```

![](images/clipboard-589159366.png){fig-align="center" width="297"}

#### Squared

Make a grid that covers the city polygon

```{r}
GRID = city_limit |>
  st_transform(crs = 3857) |> # to a projected crs
  st_make_grid(cellsize = 400, # meters, we are using a projected crs
               what = "polygons",
               square = TRUE) |> # if FALSE, hexagons
  st_sf() |> # from list to sf
  st_transform(crs = 4326) |>  # back to WGS84
  st_intersection(city_limit$geom) # crop (optional)

GRID = GRID |>  
  rename(geometry = st_make_grid.st_transform.city_limit..crs...3857...cellsize...400..) |> 
  mutate(id = c(1:nrow(GRID))) # just to give an ID to each cell 
  
mapview(GRID, alpha.regions = 0.2)
```

![The color is only referent to the ID](images/clipboard-2059408309.png){fig-align="center" width="551"}

#### Hexagonal using `h3jsr`

![](https://u-shift.github.io/SiteSelection/reference/figures/hex_grid.png){fig-align="center"}

### Areas with information
